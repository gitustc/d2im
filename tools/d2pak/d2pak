#!/bin/bash

check_file_name(){
    error_tok_num=`cat ./list | grep [^a-zA-Z0-9_\/\.\-] | awk "END{print NR}"`
    if [[ $error_tok_num > 0 ]]
    then
        echo error: only a~z A-Z 0-9 _ / . - are allowed in d2pak file name
        exit 1
    fi
}
generate_list(){
    rm d2pak_workspace -rf
    mkdir d2pak_workspace
    cd d2pak_workspace
    d2pak_workspace_path=`pwd`
    cd ..
    cd $1
    find . -type f > $d2pak_workspace_path/list
    cd $d2pak_workspace_path
    check_file_name
    sed -i "s/^.//" ./list
}

calculate_hash_table(){

    file_num=`awk 'END{print NR}' ./list`
    cp ./list ./list_backup
    for (( i=0;i<5;i++ ))
    do
        for (( j=i+1;j<5;j++ ))
        do
            for (( k=j+1;k<5;k++ ))
            do
                mkdir dir_${i}_${j}_${k}
                cp list_backup list_o
                awk '{printf("../../str2hash '"$i $j $k"'  %s\n",$1)}' list_o > ./dir_${i}_${j}_${k}/list
                cd dir_${i}_${j}_${k}
                chmod +x ./list
                ./list > ./hash
                rm ./list
                new_file_num=`cat hash | sort -u | awk 'END{print NR}' -`
                cd ..
                if [[ $new_file_num != $file_num ]]
                then
                    rm -rf dir_${i}_${j}_${k}
                fi
            done
        done
    done
    mv ./list_backup ./list
    rm ./list_o
}


d2pak_create_package(){
    generate_list  $1
    calculate_hash_table

}


if (($# != 2))
then
    echo d2pak -c root_path
    echo d2pak -u name.d2p
    exit 1
fi

if [ $1 = "-c" ]
then
    d2pak_create_package $2
    exit 0
fi


if [ $1 = "-u" ]
then
    d2pak_extract_package $2
    exit 0
fi
